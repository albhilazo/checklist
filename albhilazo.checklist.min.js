/**
 * Checklist jQuery plugin
 * @author    Albert Hilazo
 * @version   1.0.12
 *
 * @requires  jquery-1.6+
 *
 * @link      https://github.com/albhilazo/checklist
 * [Options demos]{@link http://jsfiddle.net/albhilazo/anby8wnw}
 * [Methods demos]{@link http://jsfiddle.net/albhilazo/0t0ejwzv}
 */
(function(c){c.fn.albhilazo||(c.fn.albhilazo={});c.fn.albhilazo.checklist=function(e,g){var a=this;a.NAME="albhilazo.checklist";a.settings={};a.$nodeChecklist="";var m=c(e).data(a.NAME),h={items:[],itemHtml:"{{item}}",type:"checkbox",trigger:"hover",checked:!1,checkAll:!1,placement:"append",width:"",height:"",onShow:function(){},onShowParams:{},onHide:function(){},onHideParams:{},onChange:function(){},onChangeParams:{},labelAll:"All",labelFiltered:"Filtered",labelNone:"None",labelLinks:"Links",debug:!1},
n={optType:"ERROR ("+a.NAME+'): "{{curtype}}" is not a supported value type for "{{option}}" option. Expected type "{{exptype}}". Using default value.',type:"ERROR ("+a.NAME+'): "{{type}}" is not a supported value for "type" option. Supported values are "checkbox", "link" and "custom". Using default value.',trigger:"ERROR ("+a.NAME+'): "{{trigger}}" is not a supported value for "trigger" option. Supported values are "hover" and "click". Using default value.',placement:"ERROR ("+a.NAME+'): "{{placement}}" is not a supported value for "placement" option. Supported values are "replace", "prepend" and "append". Using default value.'},
p=function(b,f){a.settings.debug&&("boolean"!==typeof f&&(f=!1),f?console.error(b):console.log(b))},k=function(b){p(n[b].replace("{{"+b+"}}",a.settings[b]),!0);a.settings[b]=h[b]},d=function(b,f,c){typeof f!==c&&(p(n.optType.replace("{{curtype}}",typeof f).replace("{{option}}",b).replace("{{exptype}}",c),!0),a.settings[b]=h[b])},l=function(){var b=a.$nodeChecklist.find(".checklist-label");if("link"==a.settings.type)b.html(a.settings.labelLinks);else{var f=a.$nodeChecklist.find("ul.list input").length,
c=a.$nodeChecklist.find("ul.list input:checked");c.length===f?b.html(a.settings.labelAll):0<c.length?b.html(a.settings.labelFiltered):b.html(a.settings.labelNone)}},r=function(){var b=a.$nodeChecklist.children("ul.list");"click"==a.settings.trigger?(a.$nodeChecklist.addClass("clclick").click(function(){a.$nodeChecklist.toggleClass("clactive",!b.is(":visible"))}),c(document).mouseup(function(f){a.$nodeChecklist.is(f.target)||0!==a.$nodeChecklist.has(f.target).length||a.$nodeChecklist.removeClass("clactive")})):
("hover"!=a.settings.trigger&&k("trigger"),a.$nodeChecklist.hover(function(f){a.settings.onShow(f,a.$nodeChecklist,a.settings.onShowParams)},function(f){a.settings.onHide(f,a.$nodeChecklist,a.settings.onHideParams)}));"checkbox"==a.settings.type&&1==a.settings.checkAll&&a.$nodeChecklist.find("span.checklist-checkall-icon").click(function(a){a.stopPropagation();a=b.find("input:checkbox");a.length!=a.filter(":checked").length?a.prop("checked",!0).trigger("change"):a.prop("checked",!1).trigger("change");
l()});"checkbox"==a.settings.type&&b.find("input:checkbox").change(function(c){a.settings.onChange(c,a.$nodeChecklist,a.settings.onChangeParams);l()})},q=function(){a.settings=c.extend({},h,g);d("items",a.settings.items,"object");d("itemHtml",a.settings.itemHtml,"string");d("type",a.settings.type,"string");d("trigger",a.settings.trigger,"string");d("checked",a.settings.checked,"boolean");d("checkAll",a.settings.checkAll,"boolean");d("placement",a.settings.placement,"string");d("width",a.settings.width,
"string");d("height",a.settings.height,"string");d("onChange",a.settings.onChange,"function");d("onChangeParams",a.settings.onChangeParams,"object");d("labelAll",a.settings.labelAll,"string");d("labelFiltered",a.settings.labelFiltered,"string");d("labelNone",a.settings.labelNone,"string");d("labelLinks",a.settings.labelLinks,"string");a.$nodeChecklist=c("<div class='checklist'> <div class='checklist-label-wrapper'><div class='checklist-label'>{{label}}</div></div> <ul class='list'></ul> </div>".replace("{{label}}",
a.settings.labelNone));"checkbox"==a.settings.type&&1==a.settings.checkAll&&a.$nodeChecklist.addClass("checklist-checkall").find(".checklist-label-wrapper").append("<span class='checklist-checkall-icon' title='Check all'></span>");a.settings.width&&a.$nodeChecklist.css("width",a.settings.width);a.settings.height&&a.$nodeChecklist.find("ul.list").css("max-height",a.settings.height);a.addItems(a.settings.items);r();l();"replace"==a.settings.placement?c(e).html(a.$nodeChecklist):"prepend"==a.settings.placement?
c(e).prepend(a.$nodeChecklist):("append"!=a.settings.placement&&k("placement"),c(e).append(a.$nodeChecklist))};a.addItems=function(b){c.each(b,function(c,b){if("link"==a.settings.type)a.$nodeChecklist.children("ul.list").append("<li><a href='{{url}}'>{{item}}</a></li>".replace("{{item}}",b[0]).replace("{{url}}",b[1]));else if("custom"==a.settings.type)a.$nodeChecklist.children("ul.list").append("<li>{{html}}</li>".replace("{{html}}",a.settings.itemHtml).replace("{{item}}",b));else{"checkbox"!=a.settings.type&&
k("type");var d,e;"object"===typeof b&&1<b.length?(d=b[1]?"checked":"",e=b[0]):(d=a.settings.checked?"checked":"",e=b);a.$nodeChecklist.children("ul.list").append("<li><label><input type='checkbox' {{checked}}/>{{item}}</label></li>".replace("{{item}}",e).replace("{{checked}}",d))}})};a.removeItems=function(b){a.$nodeChecklist.find("ul.list > li").each(function(a,d){-1<b.indexOf(c(d).text())&&c(d).remove()})};a.reset=function(){a.destroy();q()};a.destroy=function(){c(e).children("div.checklist").remove();
c(e).removeData(a.NAME)};if(void 0==m&&"object"==typeof g&&g)q();else return m};c.fn.albhilazo_checklist=function(e,g){return this.each(function(){var a=c(this).data("albhilazo.checklist");void 0==a&&c(this).data("albhilazo.checklist",new c.fn.albhilazo.checklist(this,e));if("string"==typeof e)if(a[e])a[e](g);else console.error('ERROR (albhilazo.checklist): "'+e+'" is not a supported method.')})}})(jQuery);