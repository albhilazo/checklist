/**
 * Checklist jQuery plugin
 * @author    Albert Hilazo
 * @version   1.0.9
 *
 * @requires  jquery-1.6+
 *
 * @link      https://github.com/albhilazo/checklist
 * [Options demos]{@link http://jsfiddle.net/albhilazo/anby8wnw}
 * [Methods demos]{@link http://jsfiddle.net/albhilazo/0t0ejwzv}
 */
(function(b){b.fn.albhilazo||(b.fn.albhilazo={});b.fn.albhilazo.checklist=function(e,f){var a=this;a.NAME="albhilazo.checklist";a.settings={};a.$nodeChecklist="";var l=b(e).data(a.NAME),h={items:[],itemHtml:"",type:"checkbox",trigger:"hover",checked:!1,checkAll:!1,placement:"append",width:"",height:"",onChange:function(){},onChangeParams:{},labelAll:"All",labelFiltered:"Filtered",labelNone:"None",labelLinks:"Links",debug:!1},m={optType:"ERROR ("+a.NAME+'): "{{curtype}}" is not a supported value type for "{{option}}" option. Expected type "{{exptype}}". Using default value.',
type:"ERROR ("+a.NAME+'): "{{type}}" is not a supported value for "type" option. Supported values are "checkbox" and "link". Using default value.',trigger:"ERROR ("+a.NAME+'): "{{trigger}}" is not a supported value for "trigger" option. Supported values are "hover" and "click". Using default value.',placement:"ERROR ("+a.NAME+'): "{{placement}}" is not a supported value for "placement" option. Supported values are "replace", "prepend" and "append". Using default value.'},n=function(c,b){a.settings.debug&&
("boolean"!==typeof b&&(b=!1),b?console.error(c):console.log(c))},k=function(c){n(m[c].replace("{{"+c+"}}",a.settings[c]),!0);a.settings[c]=h[c]},d=function(c,b,g){typeof b!==g&&(n(m.optType.replace("{{curtype}}",typeof b).replace("{{option}}",c).replace("{{exptype}}",g),!0),a.settings[c]=h[c])},p=function(){var c=a.$nodeChecklist.find(".checklist-label");if("link"==a.settings.type)c.html(a.settings.labelLinks);else{var b=a.$nodeChecklist.find("ul.list input").length,g=a.$nodeChecklist.find("ul.list input:checked");
g.length===b?c.html(a.settings.labelAll):0<g.length?c.html(a.settings.labelFiltered):c.html(a.settings.labelNone)}},q=function(){"click"==a.settings.trigger?(a.$nodeChecklist.addClass("clclick").click(function(){b(this).toggleClass("clactive").children("ul.list").toggle()}),b(document).mouseup(function(b){a.$nodeChecklist.is(b.target)||0!==a.$nodeChecklist.has(b.target).length||a.$nodeChecklist.removeClass("clactive").children("ul.list").hide()})):("hover"!=a.settings.trigger&&k("trigger"),a.$nodeChecklist.hover(function(){b(this).children("ul.list").show()},
function(){b(this).children("ul.list").hide()}));"checkbox"==a.settings.type&&1==a.settings.checkAll&&a.$nodeChecklist.find("span.checklist-checkall-icon").click(function(){var b=a.$nodeChecklist.find("ul.list input:checkbox");b.length!=b.filter(":checked").length?b.prop("checked",!0):b.prop("checked",!1)});"checkbox"==a.settings.type&&a.$nodeChecklist.find("ul.list input:checkbox").change(function(b){a.settings.onChange(b,a.$nodeChecklist,a.settings.onChangeParams);p()})};a.addItems=function(c){b.each(c,
function(b,c){if("link"==a.settings.type)a.$nodeChecklist.children("ul.list").append("<li><a href='{{url}}'>{{item}}</a></li>".replace("{{item}}",c[0]).replace("{{url}}",c[1]));else if("custom"==a.settings.type)a.$nodeChecklist.children("ul.list").append("<li>{{html}}</li>".replace("{{html}}",a.settings.itemHtml).replace("{{item}}",c));else{"checkbox"!=a.settings.type&&k("type");var d,e;"object"===typeof c&&1<c.length?(d=c[1]?"checked":"",e=c[0]):(d=a.settings.checked?"checked":"",e=c);a.$nodeChecklist.children("ul.list").append("<li><label><input type='checkbox' {{checked}}/>{{item}}</label></li>".replace("{{item}}",
e).replace("{{checked}}",d))}})};a.removeItems=function(c){a.$nodeChecklist.find("ul.list > li").each(function(a,d){-1<c.indexOf(b(d).text())&&b(d).remove()})};a.destroy=function(){b(e).children("div.checklist").remove();b(e).removeData(a.NAME)};if(void 0==l&&"object"==typeof f&&f)a.settings=b.extend({},h,f),d("items",a.settings.items,"object"),d("itemHtml",a.settings.type,"string"),d("type",a.settings.type,"string"),d("trigger",a.settings.trigger,"string"),d("checked",a.settings.checked,"boolean"),
d("checkAll",a.settings.checkAll,"boolean"),d("placement",a.settings.placement,"string"),d("width",a.settings.width,"string"),d("height",a.settings.height,"string"),d("onChange",a.settings.onChange,"function"),d("onChangeParams",a.settings.onChangeParams,"object"),d("labelAll",a.settings.labelAll,"string"),d("labelFiltered",a.settings.labelFiltered,"string"),d("labelNone",a.settings.labelNone,"string"),d("labelLinks",a.settings.labelLinks,"string"),a.$nodeChecklist=b("<div class='checklist'> <div class='checklist-label-wrapper'><div class='checklist-label'>{{label}}</div></div> <ul class='list'></ul> </div>".replace("{{label}}",
a.settings.labelNone)),"checkbox"==a.settings.type&&1==a.settings.checkAll&&a.$nodeChecklist.addClass("checklist-checkall").find(".checklist-label-wrapper").append("<span class='checklist-checkall-icon' title='Check all'></span>"),a.settings.width&&a.$nodeChecklist.css("width",a.settings.width),a.settings.height&&a.$nodeChecklist.find("ul.list").css("max-height",a.settings.height),a.addItems(a.settings.items),q(),p(),"replace"==a.settings.placement?b(e).html(a.$nodeChecklist):"prepend"==a.settings.placement?
b(e).prepend(a.$nodeChecklist):("append"!=a.settings.placement&&k("placement"),b(e).append(a.$nodeChecklist));else return l};b.fn.albhilazo_checklist=function(e,f){return this.each(function(){var a=b(this).data("albhilazo.checklist");void 0==a&&b(this).data("albhilazo.checklist",new b.fn.albhilazo.checklist(this,e));if("string"==typeof e)if(a[e])a[e](f);else _debug('ERROR (albhilazo.checklist): "'+e+'" is not a supported method.',!0)})}})(jQuery);